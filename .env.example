################################################################################
# ENVIRONMENT SETUP FOR: ./docs/AWS_API_GATEWAY_EXAMPLE.md
#
# * Copy `.env.example` to `.env`
# * Adjust the values in `.env`
# * Export the `.env` file to the environment with:
#   `export $(grep -v '^#' .env | xargs -0)`
#
################################################################################


################################################################################
# ENV VARS USED BY THE LAMBDA FUNCTION
################################################################################

# Supported log levels:
#  * Python - DEBUG, INFO, WARN, ERROR or CRITICAL
#  * Nodejs - DEBUG, INFO, WARN or ERROR
#
# Will default to ERROR when no value is provided
LAMBDA_LOG_LEVEL=DEBUG

# Recommend only for development and testing proposes. For production follow the
# recommendations in the quickstart.
# The dummy secret for testing: /docs/AWS_API_GATEWAY_EXAMPLE.md#prepare-the-env-file
APPROOV_BASE64_SECRET=___YOUR_BASE64_SECRET_HERE___

# Supports `AWS_SECRET_MANAGER` or `ENV_VAR`
# Will default to AWS_SECRET_MANAGER when no value is provided
APPROOV_BASE64_SECRET_STORAGE=ENV_VAR


################################################################################
# ENV VARS USED BY COMMANDS AT: ./docs/AWS_API_GATEWAY_EXAMPLE.md
################################################################################

# This prefix will be used by several AWS CLI and Docker commands.
# For example it will be used to tag the docker image, to create IAM roles, etc.
# The prefix is optional, but can be handy later for cleanup proposes, e.g: be
# able to identify all the resources created to follow the quickstart.
PREFIX=approov-quickstart_

# Select either "python" or "nodejs"
LAMBDA_LANG=python

# Specify the region in which you want to create resources
AWS_DEFAULT_REGION=___YOUR_AWS_DEFAULT_REGION_HERE___

# Set the env var holding the AWS account number. The provided command extracts
# the number for the active AWS credentials:
#   $ aws sts get-caller-identity --query Account --output text
AWS_ACCOUNT_ID=___YOUR_ACCOUNT_ID_HERE___
